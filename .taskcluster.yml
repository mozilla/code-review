version: 1
policy:
  pullRequests: public
tasks:
  $let:
    head_branch:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.ref}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.ref}
        else: ${event.release.target_commitish}

    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}

    repository:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}
  in:
    - taskId: {$eval: as_slugid("bot_checks")}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      created: {$fromNow: ''}
      deadline: {$fromNow: '1 hour'}
      extra:
        github:
          events:
            - pull_request.opened
            - pull_request.reopened
            - pull_request.synchronize
            - push
      payload:
        maxRunTime: 3600
        image: python:3-alpine
        command:
          - sh
          - -lxce
          - "apk add git --quiet &&
            git clone --quiet ${repository} /src && cd /src/bot && git checkout ${head_rev} -b checks &&
            pip install . && pip install -r requirements-dev.txt &&
            flake8 && pytest -v"
      metadata:
        name: Code Review Bot checks
        description: Check python code (unit tests & linting)
        owner: bastien@mozilla.com
        source: https://github.com/mozilla/code-review

    - taskId: {$eval: as_slugid("frontend_build")}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      created: {$fromNow: ''}
      deadline: {$fromNow: '1 hour'}
      extra:
        github:
          events:
            - pull_request.opened
            - pull_request.reopened
            - pull_request.synchronize
            - push
      payload:
        maxRunTime: 3600
        image: node:11-alpine
        command:
          - sh
          - -lxce
          - "apk add git lcms2-dev bash libpng-dev autoconf build-base --quiet &&
            git clone --quiet ${repository} /src && cd /src/frontend && git checkout ${head_rev} -b build &&
            npm install && npm run build"
        artifacts:
          public/frontend:
            expires: {$fromNow: '2 weeks'}
            path: /src/frontend/build
            type: directory
      metadata:
        name: Code Review Frontend build
        description: Build web single page application
        owner: bastien@mozilla.com
        source: https://github.com/mozilla/code-review

    - taskId: {$eval: as_slugid("bot_build")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '1 hour'}
      provisionerId: aws-provisioner-v1
      workerType: releng-svc
      dependencies:
        - {$eval: as_slugid("bot_checks")}
      payload:
        capabilities:
          privileged: true
        maxRunTime: 3600
        image: mozilla/taskboot:0.1.6
        env:
          GIT_REPOSITORY: ${repository}
          GIT_REVISION: ${head_rev}
        command:
          - taskboot
          - build
          - --write
          - /images/code-review-bot.tar
          - bot/Dockerfile
        artifacts:
          public/bugbug:
            expires: {$fromNow: '2 weeks'}
            path: /images
            type: directory
      scopes:
        - docker-worker:capability:privileged
      metadata:
        name: Code Review Bot docker build
        description: Build docker image of code review bot
        owner: bastien@mozilla.com
        source: https://github.com/mozilla/code-review

    - $if: 'tasks_for == "github-push" && (head_branch in ["refs/heads/testing", "refs/heads/staging", "refs/heads/production"])'
      then:
        taskId: {$eval: as_slugid("frontend_deploy")}
        created: {$fromNow: ''}
        deadline: {$fromNow: '1 hour'}
        provisionerId: aws-provisioner-v1
        workerType: github-worker
        dependencies:
          - {$eval: as_slugid("frontend_build")}
        payload:
          maxRunTime: 3600
          image: mozilla/taskboot:0.1.6
          env:
            # TODO: use variable for channel
            TASKCLUSTER_SECRET: project/relman/code-review/deploy-testing
          command:
            - taskboot
            - deploy-s3
            - --artifact-folder
            - public/frontend
            - --bucket
            # TODO: use variable for channel
            - release-services-staticanalysis-frontend-testing
          artifacts:
            public/bugbug:
              expires: {$fromNow: '2 weeks'}
              path: /images
              type: directory
        scopes:
          - docker-worker:capability:privileged
        metadata:
          name: Code Review Frontend deploy
          description: Deploy frontend build on environment
          owner: bastien@mozilla.com
          source: https://github.com/mozilla/code-review
