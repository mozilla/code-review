# Generated by Django 5.1.1 on 2024-10-14 13:05

from django.db import migrations, models
from django.db.models import OuterRef, Subquery


def move_attributes(apps, schema_editor):
    """
    Update values for new attributes on IssueLink
    using source data from linked Issue
    """
    IssueLink = apps.get_model("issues", "IssueLink")
    Issue = apps.get_model("issues", "Issue")

    fields = {
        field: Subquery(Issue.objects.filter(id=OuterRef("issue_id")).values(field)[:1])
        for field in ["in_patch", "new_for_revision", "char", "line", "nb_lines"]
    }
    IssueLink.objects.update(**fields)


class Migration(migrations.Migration):
    dependencies = [
        ("issues", "0012_move_issues_attributes_part_1"),
    ]

    operations = [
        # Move all their values
        migrations.RunPython(move_attributes),
        # Remove old fields from Issue
        migrations.RemoveField(
            model_name="issue",
            name="in_patch",
        ),
        migrations.RemoveField(
            model_name="issue",
            name="new_for_revision",
        ),
        migrations.RemoveField(
            model_name="issue",
            name="char",
        ),
        migrations.RemoveField(
            model_name="issue",
            name="line",
        ),
        migrations.RemoveField(
            model_name="issue",
            name="nb_lines",
        ),
        # Update constraints
        migrations.RemoveConstraint(
            model_name="issuelink",
            name="issue_link_unique_revision",
        ),
        migrations.RemoveConstraint(
            model_name="issuelink",
            name="issue_link_unique_diff",
        ),
        migrations.AddConstraint(
            model_name="issuelink",
            constraint=models.UniqueConstraint(
                condition=models.Q(("diff__isnull", True)),
                fields=("issue", "revision", "line", "nb_lines", "char"),
                name="issue_link_unique_revision",
            ),
        ),
        migrations.AddConstraint(
            model_name="issuelink",
            constraint=models.UniqueConstraint(
                condition=models.Q(("diff__isnull", False)),
                fields=("issue", "revision", "diff", "line", "nb_lines", "char"),
                name="issue_link_unique_diff",
            ),
        ),
    ]
