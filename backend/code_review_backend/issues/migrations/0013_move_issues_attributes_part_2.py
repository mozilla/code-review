# Generated by Django 5.1.1 on 2024-10-14 13:05

from django.db import migrations
from tqdm import tqdm


def move_attributes(apps, schema_editor):
    """
    Update values for new attributes on IssueLink
    using source data from linked Issue
    """
    Issue = apps.get_model("issues", "Issue")

    issues = (
        Issue.objects.prefetch_related("issue_links")
        # Skip what does not need to be updated
        .exclude(in_patch__isnull=True, new_for_revision__isnull=True)
    )
    # Avoid overriding django line for the migration
    print()
    for issue in tqdm(
        issues.iterator(chunk_size=100),
        total=issues.count(),
    ):
        if all(
            i.in_patch == issue.in_patch
            and i.new_for_revision == issue.new_for_revision
            for i in issue.issue_links.all()
        ):
            continue
        issue.issue_links.update(
            in_patch=issue.in_patch, new_for_revision=issue.new_for_revision
        )


def restore_attributes(apps, schema_editor):
    """Copy attributes in the reverse direction"""
    IssueLink = apps.get_model("issues", "IssueLink")
    total_count = IssueLink.objects.distinct("issue").count()
    qs = (
        IssueLink.objects.select_related("issue")
        .filter(issue__in_patch__isnull=True, issue__new_for_revision__isnull=True)
        .exclude(in_patch__isnull=True, new_for_revision__isnull=True)
        .distinct("issue")
    )
    # Avoid overriding django line for the migration
    print()
    for issue_link in tqdm(
        qs.iterator(), initial=total_count - qs.count(), total=total_count
    ):
        issue_link.issue.in_patch = issue_link.in_patch
        issue_link.issue.new_for_revision = issue_link.new_for_revision
        issue_link.issue.save()


class Migration(migrations.Migration):
    # Mark the migration as non atomic so it can be completed progressively
    atomic = False

    dependencies = [("issues", "0012_move_issues_attributes_part_1")]

    operations = [
        migrations.RunPython(
            move_attributes,
            reverse_code=restore_attributes,
        ),
    ]
