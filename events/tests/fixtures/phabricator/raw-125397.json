{
	"result": "diff --git a\/dom\/security\/ReferrerInfo.h b\/dom\/security\/ReferrerInfo.h\n--- a\/dom\/security\/ReferrerInfo.h\n+++ b\/dom\/security\/ReferrerInfo.h\n@@ -13,6 +13,7 @@\n #include \"mozilla\/net\/ReferrerPolicy.h\"\n #include \"nsReadableUtils.h\"\n #include \"mozilla\/Maybe.h\"\n+#include \"mozilla\/HashFunctions.h\"\n \n #define REFERRERINFOF_CONTRACTID \"@mozilla.org\/referrer-info;1\"\n \/\/ 041a129f-10ce-4bda-a60d-e027a26d5ed0\n@@ -30,6 +31,8 @@\n class nsIPrincipal;\n \n namespace mozilla {\n+class URLAndReferrerInfo;\n+\n namespace net {\n class HttpBaseChannel;\n class nsHttpChannel;\n@@ -84,6 +87,18 @@\n   static already_AddRefed\u003cnsIReferrerInfo\u003e CreateForFetch(\n       nsIPrincipal* aPrincipal, Document* aDoc);\n \n+  \/**\n+   * Initialize an object with a given document and stylesheet, in order to use\n+   * this object to compute and set referrer header in style system.\n+   *\n+   * @param aSheet the stylesheet to init referrerInfo.\n+   * @param aDocument the document to init referrerInfo object. Only use this\n+   *        param when we don't have aSheet.\n+   *\/\n+\n+  static already_AddRefed\u003cnsIReferrerInfo\u003e CreateForStyle(StyleSheet* aSheet,\n+                                                          Document* aDocument);\n+\n   \/**\n    * Check whether the given referrer's scheme is allowed to be computed and\n    * sent. The whitelist schemes are: http, https, ftp.\n@@ -138,6 +153,11 @@\n                                            nsIURI* aURI = nullptr,\n                                            bool privateBrowsing = false);\n \n+  \/**\n+   * Hash function for this object\n+   *\/\n+  PLDHashNumber Hash() const;\n+\n   NS_DECL_THREADSAFE_ISUPPORTS\n   NS_DECL_NSIREFERRERINFO\n   NS_DECL_NSISERIALIZABLE\n@@ -258,6 +278,8 @@\n                                   TrimmingPolicy aTrimmingPolicy,\n                                   nsACString& aResult) const;\n \n+  friend class mozilla::URLAndReferrerInfo;\n+\n   nsCOMPtr\u003cnsIURI\u003e mOriginalReferrer;\n \n   uint32_t mPolicy;\ndiff --git a\/dom\/security\/ReferrerInfo.cpp b\/dom\/security\/ReferrerInfo.cpp\n--- a\/dom\/security\/ReferrerInfo.cpp\n+++ b\/dom\/security\/ReferrerInfo.cpp\n@@ -22,6 +22,7 @@\n #include \"mozilla\/net\/CookieSettings.h\"\n #include \"mozilla\/net\/HttpBaseChannel.h\"\n #include \"mozilla\/dom\/Element.h\"\n+#include \"mozilla\/StyleSheet.h\"\n \n static mozilla::LazyLogModule gReferrerInfoLog(\"ReferrerInfo\");\n #define LOG(msg) MOZ_LOG(gReferrerInfoLog, mozilla::LogLevel::Debug, msg)\n@@ -610,6 +611,39 @@\n   return NS_OK;\n }\n \n+NS_IMETHODIMP\n+ReferrerInfo::Equals(nsIReferrerInfo* aOther, bool* aResult) {\n+  NS_ENSURE_TRUE(aOther, NS_ERROR_INVALID_ARG);\n+  if (aOther == this) {\n+    *aResult = true;\n+    return NS_OK;\n+  }\n+\n+  *aResult = false;\n+  ReferrerInfo* other = static_cast\u003cReferrerInfo*\u003e(aOther);\n+\n+  if (mPolicy != other-\u003emPolicy || mSendReferrer != other-\u003emSendReferrer ||\n+      mComputedReferrer != other-\u003emComputedReferrer) {\n+    return NS_OK;\n+  }\n+\n+  if (!mOriginalReferrer != !other-\u003emOriginalReferrer) {\n+    \/\/ One or the other has mOriginalReferrer, but not both... not equal\n+    return NS_OK;\n+  }\n+\n+  bool originalReferrerEquals;\n+  if (mOriginalReferrer &&\n+      (NS_FAILED(mOriginalReferrer-\u003eEquals(other-\u003emOriginalReferrer,\n+                                           &originalReferrerEquals)) ||\n+       !originalReferrerEquals)) {\n+    return NS_OK;\n+  }\n+\n+  *aResult = true;\n+  return NS_OK;\n+}\n+\n already_AddRefed\u003cnsIURI\u003e ReferrerInfo::GetComputedReferrer() {\n   if (!mComputedReferrer.isSome() || mComputedReferrer.value().IsEmpty()) {\n     return nullptr;\n@@ -624,6 +658,18 @@\n   return result.forget();\n }\n \n+PLDHashNumber ReferrerInfo::Hash() const {\n+  nsAutoCString originalReferrerSpec, computedSpec;\n+  if (mOriginalReferrer) {\n+    Unused \u003c\u003c mOriginalReferrer-\u003eGetSpec(originalReferrerSpec);\n+  }\n+\n+  return mozilla::AddToHash(\n+      mPolicy, mSendReferrer, mozilla::HashString(originalReferrerSpec),\n+      mozilla::HashString(mComputedReferrer.isSome() ? mComputedReferrer.value()\n+                                                     : EmptyCString()));\n+}\n+\n NS_IMETHODIMP\n ReferrerInfo::Init(uint32_t aReferrerPolicy, bool aSendReferrer,\n                    nsIURI* aOriginalReferrer) {\n@@ -725,6 +771,28 @@\n   return referrerInfo.forget();\n }\n \n+\/* static *\/\n+already_AddRefed\u003cnsIReferrerInfo\u003e ReferrerInfo::CreateForStyle(\n+    StyleSheet* aSheet, Document* aDocument) {\n+  nsCOMPtr\u003cnsIReferrerInfo\u003e referrerInfo;\n+\n+  if (aSheet && !aSheet-\u003eIsInline()) {\n+    \/\/ Step 2\n+    \/\/ https:\/\/w3c.github.io\/webappsec-referrer-policy\/#integration-with-css We\n+    \/\/ always use this function when create a new stylesheet. So use empty\n+    \/\/ policy at the beginning and update it later from Referrer-Policy header.\n+    referrerInfo = new ReferrerInfo(aSheet-\u003eGetSheetURI(), RP_Unset);\n+    return referrerInfo.forget();\n+  }\n+\n+  nsCOMPtr\u003cnsIURI\u003e originalReferrer =\n+      aDocument ? aDocument-\u003eGetDocumentURI() : nullptr;\n+  uint32_t policy = aDocument ? aDocument-\u003eGetReferrerPolicy() : RP_Unset;\n+\n+  referrerInfo = new ReferrerInfo(originalReferrer, policy);\n+  return referrerInfo.forget();\n+}\n+\n void ReferrerInfo::GetReferrerPolicyFromAtribute(nsINode* aNode,\n                                                  uint32_t& aPolicy) const {\n   aPolicy = mozilla::net::RP_Unset;\n@@ -732,7 +800,7 @@\n \n   if (!element-\u003eIsAnyOfHTMLElements(nsGkAtoms::a, nsGkAtoms::area,\n                                     nsGkAtoms::script, nsGkAtoms::iframe,\n-                                    nsGkAtoms::img)) {\n+                                    nsGkAtoms::link, nsGkAtoms::img)) {\n     return;\n   }\n \ndiff --git a\/dom\/interfaces\/security\/nsIReferrerInfo.idl b\/dom\/interfaces\/security\/nsIReferrerInfo.idl\n--- a\/dom\/interfaces\/security\/nsIReferrerInfo.idl\n+++ b\/dom\/interfaces\/security\/nsIReferrerInfo.idl\n@@ -39,6 +39,11 @@\n   [must_use, noscript, nostdcall, notxpcom]\n   URIRef GetComputedReferrer();\n \n+  \/**\n+  * Returns whether the other referrerInfo is equivalent to this referrerInfo.\n+   *\/\n+  boolean equals(in nsIReferrerInfo other);\n+\n   \/**\n    * Initialize method.\n    * @param aReferrerPolicy referrer policy of the created object\n\n",
	"error_code": null,
	"error_info": null
}
